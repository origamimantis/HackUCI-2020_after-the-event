"use strict";

const ImergoClass = require("../..").ImergoClass;

module.exports = class Foo extends ImergoClass {
    constructor(config)
    {
        super(config);
    }

    initDefaults()
    {
        super.initDefaults();
        this._name = "foo";
        this._created = new Date();
        this._imergoObject = new ImergoClass();
        this._imergoObjects = [];
        this._maps = new Map();
        this._simpleObjects = ["a", "b"];
        this._enabled = true;
    }

    set maps(x)
    {
        if(Array.isArray(x))
        {
            let arr = [];
            for(let row of x)
            {
                row[1] = new ImergoClass(row[1]);
                arr.push(row);
            }
            this._maps = new Map(arr);
        }
        else
        {
            this._maps = x;
        }
    }

    get maps()
    {
        return this._maps;
    }

    set simpleObjects(x)
    {
        this._simpleObjects = x;
    }

    get simpleObjects()
    {
        return this._simpleObjects;
    }

    set imergoObjects(x)
    {
        this._imergoObjects = x;
    }

    get imergoObjects()
    {
        return this._imergoObjects;
    }

    set imergoObject(x)
    {
        this._imergoObject = x;
    }

    get imergoObject()
    {
        return this._imergoObject;
    }

    set created(x)
    {
        this._created = x;
    }

    get created()
    {
        return this._created;
    }

    set name(x)
    {
        this._name = x;
    }

    get name()
    {
        return this._name;
    }

    set enabled(x)
    {
        this._enabled = x;
    }

    get enabled()
    {
        return this._enabled;
    }

    set obj(x)
    {
        this._obj = x;
    }

    get obj()
    {
        return this._obj;
    }
};